<?php

declare(strict_types=1);

/*
 * TaamAiUserLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace TaamAiUserLib\Tests\Controllers;

use Core\TestCase\BodyMatchers\KeysBodyMatcher;
use Core\TestCase\TestParam;
use TaamAiUserLib\Controllers\AuthController;
use TaamAiUserLib\Exceptions;

class AuthControllerTest extends BaseTestController
{
    /**
     * @var AuthController AuthController instance
     */
    protected static $controller;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$controller = parent::getClient()->getAuthController();
    }

    public function testLogin()
    {
        // Parameters for the API call
        $email = 'sobanshahid47@gmail.com';
        $password = 'ali112233';

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->login($email, $password);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', false];
        $headers['Host'] = ['127.0.0.1:8000', false];
        $headers['Date'] = ['Tue, 19 Sep 2023 12:24:10 GMT', false];
        $headers['Connection'] = ['close', false];
        $headers['X-Powered-By'] = ['PHP/8.1.6', false];
        $headers['Cache-Control'] = ['no-cache, private', false];
        $headers['X-RateLimit-Limit'] = ['60', false];
        $headers['X-RateLimit-Remaining'] = ['59', false];
        $headers['Access-Control-Allow-Origin'] = ['*', false];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                "{\r\n  \"status\": true,\r\n  \"message\": \"Successfully logged in\",\r\n  \"" .
                "access_token\": \"6|b6WIe6smnjl2dP0Yulzu8TsQnr6UtAV2SmtiKj3V\",\r\n  \"token_ty" .
                "pe\": \"Bearer\",\r\n  \"expires_at\": null,\r\n  \"user\": {\r\n    \"id\": 20" .
                ",\r\n    \"name\": \"soban\",\r\n    \"job_role\": \"Happy Person\",\r\n    \"e" .
                "mail\": \"sobanshahid47@gmail.com\",\r\n    \"subdomain\": null,\r\n    \"email" .
                "_verified_at\": \"2023-09-19T12:22:43.000000Z\",\r\n    \"status\": \"active\"," .
                "\r\n    \"group\": \"subscriber\",\r\n    \"workbook\": \"default workbook\",\r" .
                "\n    \"workbook_id\": 21,\r\n    \"workbook_folder_id\": 26,\r\n    \"product_" .
                "id\": 0,\r\n    \"plan_id\": 3,\r\n    \"plan_type\": null,\r\n    \"company\":" .
                " null,\r\n    \"website\": null,\r\n    \"phone_number\": null,\r\n    \"addres" .
                "s\": null,\r\n    \"city\": null,\r\n    \"postal_code\": null,\r\n    \"countr" .
                "y\": \"pakistan\",\r\n    \"available_words\": 11,\r\n    \"available_words_pre" .
                "paid\": 1000,\r\n    \"total_words\": 11,\r\n    \"available_images\": 11,\r\n " .
                "   \"available_images_prepaid\": 1000,\r\n    \"total_images\": 11,\r\n    \"ba" .
                "lance\": 0,\r\n    \"total_chars\": 0,\r\n    \"available_chars\": 0,\r\n    \"" .
                "available_chars_prepaid\": 1000,\r\n    \"total_minutes\": \"0.000\",\r\n    \"" .
                "available_minutes\": \"0.000\",\r\n    \"available_minutes_prepaid\": \"10.000" .
                "\",\r\n    \"profile_photo_path\": null,\r\n    \"oauth_id\": null,\r\n    \"oa" .
                "uth_type\": null,\r\n    \"last_seen\": null,\r\n    \"member_role\": 0,\r\n   " .
                " \"parent_id\": 0,\r\n    \"ckbox\": null,\r\n    \"google2fa_secret\": null,\r" .
                "\n    \"google2fa_enabled\": 0,\r\n    \"referral_id\": \"EGUYLK7WC4DNMQU\",\r" .
                "\n    \"referred_by\": \"\",\r\n    \"referral_payment_method\": null,\r\n    " .
                "\"referral_paypal\": null,\r\n    \"referral_bank_requisites\": null,\r\n    \"" .
                "default_voiceover_language\": \"en-US\",\r\n    \"default_temp_language\": 0,\r" .
                "\n    \"default_voiceover_voice\": \"en-US-Wavenet-J\",\r\n    \"default_tone\"" .
                ": null,\r\n    \"subdomain_token\": null,\r\n    \"created_at\": \"2023-09-19T1" .
                "2:22:43.000000Z\",\r\n    \"updated_at\": \"2023-09-19T12:22:43.000000Z\"\r\n  " .
                "}\r\n}"
            )))
            ->assert();
    }

    public function testLogin1()
    {
        // Parameters for the API call
        $email = 'sobanshahid47@gmail.com';
        $password = 'ali112233';

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->login($email, $password);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', false];
        $headers['Server'] = ['nginx', false];
        $headers['Transfer-Encoding'] = ['chunked', false];
        $headers['pragma'] = ['no-cache', false];
        $headers['expires'] = ['-1', false];
        $headers['Vary'] = ['Authorization', false];
        $headers['Content-Encoding'] = ['br', false];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                "{\r\n  \"status\": true,\r\n  \"message\": \"Successfully logged in\",\r\n  \"" .
                "access_token\": \"3|5ek7yEVxDwqMgKRmJSBRhj1z0kNcSfC52EPpix04\",\r\n  \"token_ty" .
                "pe\": \"Bearer\",\r\n  \"expires_at\": null,\r\n  \"user\": {\r\n    \"id\": 40" .
                ",\r\n    \"name\": \"soban\",\r\n    \"job_role\": \"Happy Person\",\r\n    \"e" .
                "mail\": \"sobanshahid47@gmail.com\",\r\n    \"email_verified_at\": \"2023-09-22" .
                "T07:21:12.000000Z\",\r\n    \"status\": \"active\",\r\n    \"subdomain\": null," .
                "\r\n    \"group\": \"subscriber\",\r\n    \"workbook\": \"default workbook\",\r" .
                "\n    \"workbook_id\": 38,\r\n    \"workbook_folder_id\": 43,\r\n    \"product_" .
                "id\": 0,\r\n    \"plan_id\": 1,\r\n    \"plan_type\": null,\r\n    \"company\":" .
                " null,\r\n    \"website\": null,\r\n    \"phone_number\": null,\r\n    \"addres" .
                "s\": null,\r\n    \"city\": null,\r\n    \"postal_code\": null,\r\n    \"countr" .
                "y\": \"pakistan\",\r\n    \"available_words\": 20400,\r\n    \"available_words_" .
                "prepaid\": 100000,\r\n    \"total_words\": 20400,\r\n    \"available_images\": " .
                "10000,\r\n    \"available_images_prepaid\": 100000,\r\n    \"total_images\": 10" .
                "000,\r\n    \"balance\": 0,\r\n    \"total_chars\": 16600,\r\n    \"available_c" .
                "hars\": 16600,\r\n    \"available_chars_prepaid\": 1000,\r\n    \"total_minutes" .
                "\": \"200.000\",\r\n    \"available_minutes\": \"200.000\",\r\n    \"available_" .
                "minutes_prepaid\": \"10.000\",\r\n    \"profile_photo_path\": null,\r\n    \"oa" .
                "uth_id\": null,\r\n    \"oauth_type\": null,\r\n    \"last_seen\": null,\r\n   " .
                " \"member_role\": 0,\r\n    \"parent_id\": 0,\r\n    \"ckbox\": null,\r\n    \"" .
                "google2fa_secret\": null,\r\n    \"google2fa_enabled\": 0,\r\n    \"referral_id" .
                "\": \"LCPFKIBCE7IEUGY\",\r\n    \"referred_by\": \"\",\r\n    \"referral_paymen" .
                "t_method\": null,\r\n    \"referral_paypal\": null,\r\n    \"referral_bank_requ" .
                "isites\": null,\r\n    \"default_tone\": null,\r\n    \"default_voiceover_langu" .
                "age\": \"en-US\",\r\n    \"default_temp_language\": 0,\r\n    \"default_voiceov" .
                "er_voice\": \"sk-SK-Wavenet-A\",\r\n    \"subdomain_token\": null,\r\n    \"cre" .
                "ated_at\": \"2023-09-22T07:21:12.000000Z\",\r\n    \"updated_at\": \"2023-09-22" .
                "T07:21:13.000000Z\"\r\n  }\r\n}"
            )))
            ->assert();
    }

    public function testRegister()
    {
        // Parameters for the API call
        $name = 'soban';
        $email = 'sobanshahid47@gmail.com';
        $password = 'ali112233';
        $country = 'pakistan';
        $subdomain = 'friend';

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->register($name, $email, $password, $country, $subdomain);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', false];
        $headers['Host'] = ['127.0.0.1:8000', false];
        $headers['Date'] = ['Tue, 19 Sep 2023 12:22:43 GMT', false];
        $headers['Connection'] = ['close', false];
        $headers['X-Powered-By'] = ['PHP/8.1.6', false];
        $headers['Cache-Control'] = ['no-cache, private', false];
        $headers['X-RateLimit-Limit'] = ['60', false];
        $headers['X-RateLimit-Remaining'] = ['59', false];
        $headers['Access-Control-Allow-Origin'] = ['*', false];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                "{\r\n  \"result\": true,\r\n  \"message\": \"Registration Successful. Please v" .
                "erify and log in to your account.\",\r\n  \"access_token\": \"5|78sPFuxgmVpMEE7" .
                "n9cbNfCsKHRkLOgWngwirWZh1\",\r\n  \"user\": {\r\n    \"name\": \"soban\",\r\n  " .
                "  \"email\": \"sobanshahid47@gmail.com\",\r\n    \"country\": \"pakistan\",\r\n" .
                "    \"updated_at\": \"2023-09-19T12:22:43.000000Z\",\r\n    \"created_at\": \"2" .
                "023-09-19T12:22:43.000000Z\",\r\n    \"id\": 20,\r\n    \"email_verified_at\": " .
                "\"2023-09-19T12:22:43.000000Z\",\r\n    \"status\": \"active\",\r\n    \"group" .
                "\": \"subscriber\",\r\n    \"available_words_prepaid\": \"1000\",\r\n    \"avai" .
                "lable_images_prepaid\": \"1000\",\r\n    \"available_chars_prepaid\": \"1000\"," .
                "\r\n    \"available_minutes_prepaid\": \"10\",\r\n    \"default_voiceover_langu" .
                "age\": \"en-US\",\r\n    \"default_voiceover_voice\": \"en-US-Wavenet-J\",\r\n " .
                "   \"job_role\": \"Happy Person\",\r\n    \"referral_id\": \"EGUYLK7WC4DNMQU\"," .
                "\r\n    \"referred_by\": \"\",\r\n    \"workbook\": \"default workbook\",\r\n  " .
                "  \"workbook_id\": 21,\r\n    \"workbook_folder_id\": 26,\r\n    \"plan_id\": 3" .
                ",\r\n    \"total_words\": 11,\r\n    \"total_images\": 11,\r\n    \"total_chars" .
                "\": 0,\r\n    \"total_minutes\": 0,\r\n    \"available_words\": 11,\r\n    \"av" .
                "ailable_images\": 11,\r\n    \"available_chars\": 0,\r\n    \"available_minutes" .
                "\": 0,\r\n    \"roles\": [\r\n      {\r\n        \"id\": 2,\r\n        \"name\"" .
                ": \"subscriber\",\r\n        \"guard_name\": \"web\",\r\n        \"created_at\"" .
                ": \"2023-07-06T13:33:48.000000Z\",\r\n        \"updated_at\": \"2023-07-06T13:3" .
                "3:48.000000Z\",\r\n        \"pivot\": {\r\n          \"model_id\": 20,\r\n     " .
                "     \"role_id\": 2,\r\n          \"model_type\": \"App\\\\Models\\\\User\"\r\n" .
                "        }\r\n      }\r\n    ]\r\n  }\r\n}"
            )))
            ->assert();
    }

    public function testRegister1()
    {
        // Parameters for the API call
        $name = 'soban';
        $email = 'sobanshahid47@gmail.com';
        $password = 'ali112233';
        $country = 'pakistan';
        $subdomain = 'friend';

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->register($name, $email, $password, $country, $subdomain);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', false];
        $headers['Server'] = ['nginx', false];
        $headers['Transfer-Encoding'] = ['chunked', false];
        $headers['pragma'] = ['no-cache', false];
        $headers['expires'] = ['-1', false];
        $headers['Vary'] = ['Authorization', false];
        $headers['Content-Encoding'] = ['br', false];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                "{\r\n  \"result\": true,\r\n  \"message\": \"Registration Successful. Please v" .
                "erify and log in to your account.\",\r\n  \"access_token\": \"2|QYrP7Acc8uWlie9" .
                "7NREzfG2gmueJf8nSXtAWtoMM\",\r\n  \"user\": {\r\n    \"name\": \"soban\",\r\n  " .
                "  \"email\": \"sobanshahid47@gmail.com\",\r\n    \"country\": \"pakistan\",\r\n" .
                "    \"updated_at\": \"2023-09-22T07:21:13.000000Z\",\r\n    \"created_at\": \"2" .
                "023-09-22T07:21:12.000000Z\",\r\n    \"id\": 40,\r\n    \"email_verified_at\": " .
                "\"2023-09-22T07:21:12.000000Z\",\r\n    \"status\": \"active\",\r\n    \"group" .
                "\": \"subscriber\",\r\n    \"available_words_prepaid\": \"100000\",\r\n    \"av" .
                "ailable_images_prepaid\": \"100000\",\r\n    \"available_chars_prepaid\": \"100" .
                "0\",\r\n    \"available_minutes_prepaid\": \"10\",\r\n    \"default_voiceover_l" .
                "anguage\": \"en-US\",\r\n    \"default_voiceover_voice\": \"sk-SK-Wavenet-A\"," .
                "\r\n    \"job_role\": \"Happy Person\",\r\n    \"referral_id\": \"LCPFKIBCE7IEU" .
                "GY\",\r\n    \"referred_by\": \"\",\r\n    \"workbook\": \"default workbook\"," .
                "\r\n    \"workbook_id\": 38,\r\n    \"workbook_folder_id\": 43,\r\n    \"plan_i" .
                "d\": 1,\r\n    \"total_words\": 20400,\r\n    \"total_images\": 10000,\r\n    " .
                "\"total_chars\": 16600,\r\n    \"total_minutes\": 200,\r\n    \"available_words" .
                "\": 20400,\r\n    \"available_images\": 10000,\r\n    \"available_chars\": 1660" .
                "0,\r\n    \"available_minutes\": 200,\r\n    \"roles\": [\r\n      {\r\n       " .
                " \"id\": 2,\r\n        \"name\": \"subscriber\",\r\n        \"guard_name\": \"w" .
                "eb\",\r\n        \"created_at\": \"2023-07-06T08:33:48.000000Z\",\r\n        \"" .
                "updated_at\": \"2023-07-06T08:33:48.000000Z\",\r\n        \"pivot\": {\r\n     " .
                "     \"model_id\": 40,\r\n          \"role_id\": 2,\r\n          \"model_type\"" .
                ": \"App\\\\Models\\\\User\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}"
            )))
            ->assert();
    }
}
