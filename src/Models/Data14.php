<?php

declare(strict_types=1);

/*
 * TaamAiUserLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace TaamAiUserLib\Models;

use stdClass;

class Data14 implements \JsonSerializable
{
    /**
     * @var int
     */
    private $id;

    /**
     * @var int
     */
    private $userId;

    /**
     * @var string
     */
    private $name;

    /**
     * @var string
     */
    private $description;

    /**
     * @var string
     */
    private $featureImage;

    /**
     * @var string
     */
    private $bulletPoints;

    /**
     * @var string
     */
    private $targetAudience;

    /**
     * @var string
     */
    private $tags;

    /**
     * @var string
     */
    private $deletedAt;

    /**
     * @param int $id
     * @param int $userId
     * @param string $name
     * @param string $description
     * @param string $featureImage
     * @param string $bulletPoints
     * @param string $targetAudience
     * @param string $tags
     * @param string $deletedAt
     */
    public function __construct(
        int $id,
        int $userId,
        string $name,
        string $description,
        string $featureImage,
        string $bulletPoints,
        string $targetAudience,
        string $tags,
        string $deletedAt
    ) {
        $this->id = $id;
        $this->userId = $userId;
        $this->name = $name;
        $this->description = $description;
        $this->featureImage = $featureImage;
        $this->bulletPoints = $bulletPoints;
        $this->targetAudience = $targetAudience;
        $this->tags = $tags;
        $this->deletedAt = $deletedAt;
    }

    /**
     * Returns Id.
     */
    public function getId(): int
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @required
     * @maps id
     */
    public function setId(int $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns User Id.
     */
    public function getUserId(): int
    {
        return $this->userId;
    }

    /**
     * Sets User Id.
     *
     * @required
     * @maps user_id
     */
    public function setUserId(int $userId): void
    {
        $this->userId = $userId;
    }

    /**
     * Returns Name.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * @required
     * @maps name
     */
    public function setName(string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Description.
     */
    public function getDescription(): string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     *
     * @required
     * @maps description
     */
    public function setDescription(string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Feature Image.
     */
    public function getFeatureImage(): string
    {
        return $this->featureImage;
    }

    /**
     * Sets Feature Image.
     *
     * @required
     * @maps feature_image
     */
    public function setFeatureImage(string $featureImage): void
    {
        $this->featureImage = $featureImage;
    }

    /**
     * Returns Bullet Points.
     */
    public function getBulletPoints(): string
    {
        return $this->bulletPoints;
    }

    /**
     * Sets Bullet Points.
     *
     * @required
     * @maps bullet_points
     */
    public function setBulletPoints(string $bulletPoints): void
    {
        $this->bulletPoints = $bulletPoints;
    }

    /**
     * Returns Target Audience.
     */
    public function getTargetAudience(): string
    {
        return $this->targetAudience;
    }

    /**
     * Sets Target Audience.
     *
     * @required
     * @maps target_audience
     */
    public function setTargetAudience(string $targetAudience): void
    {
        $this->targetAudience = $targetAudience;
    }

    /**
     * Returns Tags.
     */
    public function getTags(): string
    {
        return $this->tags;
    }

    /**
     * Sets Tags.
     *
     * @required
     * @maps tags
     */
    public function setTags(string $tags): void
    {
        $this->tags = $tags;
    }

    /**
     * Returns Deleted At.
     */
    public function getDeletedAt(): string
    {
        return $this->deletedAt;
    }

    /**
     * Sets Deleted At.
     *
     * @required
     * @maps deleted_at
     */
    public function setDeletedAt(string $deletedAt): void
    {
        $this->deletedAt = $deletedAt;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['id']              = $this->id;
        $json['user_id']         = $this->userId;
        $json['name']            = $this->name;
        $json['description']     = $this->description;
        $json['feature_image']   = $this->featureImage;
        $json['bullet_points']   = $this->bulletPoints;
        $json['target_audience'] = $this->targetAudience;
        $json['tags']            = $this->tags;
        $json['deleted_at']      = $this->deletedAt;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
