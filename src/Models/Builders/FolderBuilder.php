<?php

declare(strict_types=1);

/*
 * TaamAiUserLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace TaamAiUserLib\Models\Builders;

use Core\Utils\CoreHelper;
use TaamAiUserLib\Models\Folder;

/**
 * Builder for model Folder
 *
 * @see Folder
 */
class FolderBuilder
{
    /**
     * @var Folder
     */
    private $instance;

    private function __construct(Folder $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new folder Builder object.
     */
    public static function init(): self
    {
        return new self(new Folder());
    }

    /**
     * Sets id field.
     */
    public function id(?int $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets name field.
     */
    public function name(?string $value): self
    {
        $this->instance->setName($value);
        return $this;
    }

    /**
     * Sets icon field.
     */
    public function icon(?string $value): self
    {
        $this->instance->setIcon($value);
        return $this;
    }

    /**
     * Sets description field.
     */
    public function description(?string $value): self
    {
        $this->instance->setDescription($value);
        return $this;
    }

    /**
     * Unsets description field.
     */
    public function unsetDescription(): self
    {
        $this->instance->unsetDescription();
        return $this;
    }

    /**
     * Sets workbook id field.
     */
    public function workbookId(?int $value): self
    {
        $this->instance->setWorkbookId($value);
        return $this;
    }

    /**
     * Sets user id field.
     */
    public function userId(?int $value): self
    {
        $this->instance->setUserId($value);
        return $this;
    }

    /**
     * Sets status field.
     */
    public function status(?int $value): self
    {
        $this->instance->setStatus($value);
        return $this;
    }

    /**
     * Sets created at field.
     */
    public function createdAt(?string $value): self
    {
        $this->instance->setCreatedAt($value);
        return $this;
    }

    /**
     * Sets updated at field.
     */
    public function updatedAt(?string $value): self
    {
        $this->instance->setUpdatedAt($value);
        return $this;
    }

    /**
     * Sets deleted at field.
     */
    public function deletedAt(?string $value): self
    {
        $this->instance->setDeletedAt($value);
        return $this;
    }

    /**
     * Unsets deleted at field.
     */
    public function unsetDeletedAt(): self
    {
        $this->instance->unsetDeletedAt();
        return $this;
    }

    /**
     * Initializes a new folder object.
     */
    public function build(): Folder
    {
        return CoreHelper::clone($this->instance);
    }
}
