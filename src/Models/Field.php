<?php

declare(strict_types=1);

/*
 * TaamAiUserLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace TaamAiUserLib\Models;

use stdClass;

class Field implements \JsonSerializable
{
    /**
     * @var string
     */
    private $name;

    /**
     * @var string
     */
    private $placeholder;

    /**
     * @var string
     */
    private $input;

    /**
     * @var string
     */
    private $code;

    /**
     * @param string $name
     * @param string $placeholder
     * @param string $input
     * @param string $code
     */
    public function __construct(string $name, string $placeholder, string $input, string $code)
    {
        $this->name = $name;
        $this->placeholder = $placeholder;
        $this->input = $input;
        $this->code = $code;
    }

    /**
     * Returns Name.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * @required
     * @maps name
     */
    public function setName(string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Placeholder.
     */
    public function getPlaceholder(): string
    {
        return $this->placeholder;
    }

    /**
     * Sets Placeholder.
     *
     * @required
     * @maps placeholder
     */
    public function setPlaceholder(string $placeholder): void
    {
        $this->placeholder = $placeholder;
    }

    /**
     * Returns Input.
     */
    public function getInput(): string
    {
        return $this->input;
    }

    /**
     * Sets Input.
     *
     * @required
     * @maps input
     */
    public function setInput(string $input): void
    {
        $this->input = $input;
    }

    /**
     * Returns Code.
     */
    public function getCode(): string
    {
        return $this->code;
    }

    /**
     * Sets Code.
     *
     * @required
     * @maps code
     */
    public function setCode(string $code): void
    {
        $this->code = $code;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['name']        = $this->name;
        $json['placeholder'] = $this->placeholder;
        $json['input']       = $this->input;
        $json['code']        = $this->code;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
