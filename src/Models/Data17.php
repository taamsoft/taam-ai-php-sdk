<?php

declare(strict_types=1);

/*
 * TaamAiUserLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace TaamAiUserLib\Models;

use stdClass;

class Data17 implements \JsonSerializable
{
    /**
     * @var int
     */
    private $userId;

    /**
     * @var string
     */
    private $name;

    /**
     * @var string
     */
    private $description;

    /**
     * @var string
     */
    private $resolution;

    /**
     * @var string
     */
    private $image;

    /**
     * @var string
     */
    private $planType;

    /**
     * @var string
     */
    private $storage;

    /**
     * @var string
     */
    private $expiresAt;

    /**
     * @var string
     */
    private $imageName;

    /**
     * @var string
     */
    private $workbookId;

    /**
     * @var string
     */
    private $workbookFolderId;

    /**
     * @var string
     */
    private $updatedAt;

    /**
     * @var string
     */
    private $createdAt;

    /**
     * @var int
     */
    private $id;

    /**
     * @var string
     */
    private $imageUrl;

    /**
     * @param int $userId
     * @param string $name
     * @param string $description
     * @param string $resolution
     * @param string $image
     * @param string $planType
     * @param string $storage
     * @param string $expiresAt
     * @param string $imageName
     * @param string $workbookId
     * @param string $workbookFolderId
     * @param string $updatedAt
     * @param string $createdAt
     * @param int $id
     * @param string $imageUrl
     */
    public function __construct(
        int $userId,
        string $name,
        string $description,
        string $resolution,
        string $image,
        string $planType,
        string $storage,
        string $expiresAt,
        string $imageName,
        string $workbookId,
        string $workbookFolderId,
        string $updatedAt,
        string $createdAt,
        int $id,
        string $imageUrl
    ) {
        $this->userId = $userId;
        $this->name = $name;
        $this->description = $description;
        $this->resolution = $resolution;
        $this->image = $image;
        $this->planType = $planType;
        $this->storage = $storage;
        $this->expiresAt = $expiresAt;
        $this->imageName = $imageName;
        $this->workbookId = $workbookId;
        $this->workbookFolderId = $workbookFolderId;
        $this->updatedAt = $updatedAt;
        $this->createdAt = $createdAt;
        $this->id = $id;
        $this->imageUrl = $imageUrl;
    }

    /**
     * Returns User Id.
     */
    public function getUserId(): int
    {
        return $this->userId;
    }

    /**
     * Sets User Id.
     *
     * @required
     * @maps user_id
     */
    public function setUserId(int $userId): void
    {
        $this->userId = $userId;
    }

    /**
     * Returns Name.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * @required
     * @maps name
     */
    public function setName(string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Description.
     */
    public function getDescription(): string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     *
     * @required
     * @maps description
     */
    public function setDescription(string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Resolution.
     */
    public function getResolution(): string
    {
        return $this->resolution;
    }

    /**
     * Sets Resolution.
     *
     * @required
     * @maps resolution
     */
    public function setResolution(string $resolution): void
    {
        $this->resolution = $resolution;
    }

    /**
     * Returns Image.
     */
    public function getImage(): string
    {
        return $this->image;
    }

    /**
     * Sets Image.
     *
     * @required
     * @maps image
     */
    public function setImage(string $image): void
    {
        $this->image = $image;
    }

    /**
     * Returns Plan Type.
     */
    public function getPlanType(): string
    {
        return $this->planType;
    }

    /**
     * Sets Plan Type.
     *
     * @required
     * @maps plan_type
     */
    public function setPlanType(string $planType): void
    {
        $this->planType = $planType;
    }

    /**
     * Returns Storage.
     */
    public function getStorage(): string
    {
        return $this->storage;
    }

    /**
     * Sets Storage.
     *
     * @required
     * @maps storage
     */
    public function setStorage(string $storage): void
    {
        $this->storage = $storage;
    }

    /**
     * Returns Expires At.
     */
    public function getExpiresAt(): string
    {
        return $this->expiresAt;
    }

    /**
     * Sets Expires At.
     *
     * @required
     * @maps expires_at
     */
    public function setExpiresAt(string $expiresAt): void
    {
        $this->expiresAt = $expiresAt;
    }

    /**
     * Returns Image Name.
     */
    public function getImageName(): string
    {
        return $this->imageName;
    }

    /**
     * Sets Image Name.
     *
     * @required
     * @maps image_name
     */
    public function setImageName(string $imageName): void
    {
        $this->imageName = $imageName;
    }

    /**
     * Returns Workbook Id.
     */
    public function getWorkbookId(): string
    {
        return $this->workbookId;
    }

    /**
     * Sets Workbook Id.
     *
     * @required
     * @maps workbook_id
     */
    public function setWorkbookId(string $workbookId): void
    {
        $this->workbookId = $workbookId;
    }

    /**
     * Returns Workbook Folder Id.
     */
    public function getWorkbookFolderId(): string
    {
        return $this->workbookFolderId;
    }

    /**
     * Sets Workbook Folder Id.
     *
     * @required
     * @maps workbook_folder_id
     */
    public function setWorkbookFolderId(string $workbookFolderId): void
    {
        $this->workbookFolderId = $workbookFolderId;
    }

    /**
     * Returns Updated At.
     */
    public function getUpdatedAt(): string
    {
        return $this->updatedAt;
    }

    /**
     * Sets Updated At.
     *
     * @required
     * @maps updated_at
     */
    public function setUpdatedAt(string $updatedAt): void
    {
        $this->updatedAt = $updatedAt;
    }

    /**
     * Returns Created At.
     */
    public function getCreatedAt(): string
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     *
     * @required
     * @maps created_at
     */
    public function setCreatedAt(string $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Id.
     */
    public function getId(): int
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @required
     * @maps id
     */
    public function setId(int $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Image Url.
     */
    public function getImageUrl(): string
    {
        return $this->imageUrl;
    }

    /**
     * Sets Image Url.
     *
     * @required
     * @maps image_url
     */
    public function setImageUrl(string $imageUrl): void
    {
        $this->imageUrl = $imageUrl;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['user_id']            = $this->userId;
        $json['name']               = $this->name;
        $json['description']        = $this->description;
        $json['resolution']         = $this->resolution;
        $json['image']              = $this->image;
        $json['plan_type']          = $this->planType;
        $json['storage']            = $this->storage;
        $json['expires_at']         = $this->expiresAt;
        $json['image_name']         = $this->imageName;
        $json['workbook_id']        = $this->workbookId;
        $json['workbook_folder_id'] = $this->workbookFolderId;
        $json['updated_at']         = $this->updatedAt;
        $json['created_at']         = $this->createdAt;
        $json['id']                 = $this->id;
        $json['image_url']          = $this->imageUrl;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
