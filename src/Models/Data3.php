<?php

declare(strict_types=1);

/*
 * TaamAiUserLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace TaamAiUserLib\Models;

use stdClass;

class Data3 implements \JsonSerializable
{
    /**
     * @var string
     */
    private $name;

    /**
     * @var string
     */
    private $workbookId;

    /**
     * @var string
     */
    private $userId;

    /**
     * @var string
     */
    private $icon;

    /**
     * @var string|null
     */
    private $description;

    /**
     * @var string
     */
    private $updatedAt;

    /**
     * @var string
     */
    private $createdAt;

    /**
     * @var int
     */
    private $id;

    /**
     * @param string $name
     * @param string $workbookId
     * @param string $userId
     * @param string $icon
     * @param string $updatedAt
     * @param string $createdAt
     * @param int $id
     */
    public function __construct(
        string $name,
        string $workbookId,
        string $userId,
        string $icon,
        string $updatedAt,
        string $createdAt,
        int $id
    ) {
        $this->name = $name;
        $this->workbookId = $workbookId;
        $this->userId = $userId;
        $this->icon = $icon;
        $this->updatedAt = $updatedAt;
        $this->createdAt = $createdAt;
        $this->id = $id;
    }

    /**
     * Returns Name.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * @required
     * @maps name
     */
    public function setName(string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Workbook Id.
     */
    public function getWorkbookId(): string
    {
        return $this->workbookId;
    }

    /**
     * Sets Workbook Id.
     *
     * @required
     * @maps workbook_id
     */
    public function setWorkbookId(string $workbookId): void
    {
        $this->workbookId = $workbookId;
    }

    /**
     * Returns User Id.
     */
    public function getUserId(): string
    {
        return $this->userId;
    }

    /**
     * Sets User Id.
     *
     * @required
     * @maps user_id
     */
    public function setUserId(string $userId): void
    {
        $this->userId = $userId;
    }

    /**
     * Returns Icon.
     */
    public function getIcon(): string
    {
        return $this->icon;
    }

    /**
     * Sets Icon.
     *
     * @required
     * @maps icon
     */
    public function setIcon(string $icon): void
    {
        $this->icon = $icon;
    }

    /**
     * Returns Description.
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     *
     * @maps description
     */
    public function setDescription(?string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Updated At.
     */
    public function getUpdatedAt(): string
    {
        return $this->updatedAt;
    }

    /**
     * Sets Updated At.
     *
     * @required
     * @maps updated_at
     */
    public function setUpdatedAt(string $updatedAt): void
    {
        $this->updatedAt = $updatedAt;
    }

    /**
     * Returns Created At.
     */
    public function getCreatedAt(): string
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     *
     * @required
     * @maps created_at
     */
    public function setCreatedAt(string $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Id.
     */
    public function getId(): int
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @required
     * @maps id
     */
    public function setId(int $id): void
    {
        $this->id = $id;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['name']        = $this->name;
        $json['workbook_id'] = $this->workbookId;
        $json['user_id']     = $this->userId;
        $json['icon']        = $this->icon;
        $json['description'] = $this->description;
        $json['updated_at']  = $this->updatedAt;
        $json['created_at']  = $this->createdAt;
        $json['id']          = $this->id;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
