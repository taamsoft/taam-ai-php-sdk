<?php

declare(strict_types=1);

/*
 * TaamAiUserLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace TaamAiUserLib\Models;

use stdClass;

class GenerateTemplate implements \JsonSerializable
{
    /**
     * @var string
     */
    private $status;

    /**
     * @var string
     */
    private $maxResults;

    /**
     * @var string
     */
    private $temperature;

    /**
     * @var int
     */
    private $maxWords;

    /**
     * @var int
     */
    private $id;

    /**
     * @param string $status
     * @param string $maxResults
     * @param string $temperature
     * @param int $maxWords
     * @param int $id
     */
    public function __construct(string $status, string $maxResults, string $temperature, int $maxWords, int $id)
    {
        $this->status = $status;
        $this->maxResults = $maxResults;
        $this->temperature = $temperature;
        $this->maxWords = $maxWords;
        $this->id = $id;
    }

    /**
     * Returns Status.
     */
    public function getStatus(): string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     *
     * @required
     * @maps status
     */
    public function setStatus(string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Max Results.
     */
    public function getMaxResults(): string
    {
        return $this->maxResults;
    }

    /**
     * Sets Max Results.
     *
     * @required
     * @maps max_results
     */
    public function setMaxResults(string $maxResults): void
    {
        $this->maxResults = $maxResults;
    }

    /**
     * Returns Temperature.
     */
    public function getTemperature(): string
    {
        return $this->temperature;
    }

    /**
     * Sets Temperature.
     *
     * @required
     * @maps temperature
     */
    public function setTemperature(string $temperature): void
    {
        $this->temperature = $temperature;
    }

    /**
     * Returns Max Words.
     */
    public function getMaxWords(): int
    {
        return $this->maxWords;
    }

    /**
     * Sets Max Words.
     *
     * @required
     * @maps max_words
     */
    public function setMaxWords(int $maxWords): void
    {
        $this->maxWords = $maxWords;
    }

    /**
     * Returns Id.
     */
    public function getId(): int
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @required
     * @maps id
     */
    public function setId(int $id): void
    {
        $this->id = $id;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['status']      = $this->status;
        $json['max_results'] = $this->maxResults;
        $json['temperature'] = $this->temperature;
        $json['max_words']   = $this->maxWords;
        $json['id']          = $this->id;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
