<?php

declare(strict_types=1);

/*
 * TaamAiUserLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace TaamAiUserLib\Models;

use stdClass;

class Data6 implements \JsonSerializable
{
    /**
     * @var int
     */
    private $id;

    /**
     * @var int
     */
    private $userId;

    /**
     * @var string
     */
    private $language;

    /**
     * @var string
     */
    private $languageFlag;

    /**
     * @var string
     */
    private $voice;

    /**
     * @var string
     */
    private $voiceId;

    /**
     * @var string
     */
    private $gender;

    /**
     * @var string
     */
    private $text;

    /**
     * @var int
     */
    private $workbookId;

    /**
     * @var int
     */
    private $workbookFolderId;

    /**
     * @var string
     */
    private $textRaw;

    /**
     * @var string
     */
    private $fileName;

    /**
     * @var string
     */
    private $resultUrl;

    /**
     * @var string
     */
    private $resultExt;

    /**
     * @var string
     */
    private $storage;

    /**
     * @var string
     */
    private $title;

    /**
     * @var string
     */
    private $vendor;

    /**
     * @var string
     */
    private $vendorId;

    /**
     * @var int
     */
    private $characters;

    /**
     * @var string
     */
    private $voiceType;

    /**
     * @var string
     */
    private $planType;

    /**
     * @var string
     */
    private $audioType;

    /**
     * @var string
     */
    private $mode;

    /**
     * @var string|null
     */
    private $project;

    /**
     * @var string|null
     */
    private $expiresAt;

    /**
     * @var string
     */
    private $createdAt;

    /**
     * @var string
     */
    private $updatedAt;

    /**
     * @var string|null
     */
    private $deletedAt;

    /**
     * @param int $id
     * @param int $userId
     * @param string $language
     * @param string $languageFlag
     * @param string $voice
     * @param string $voiceId
     * @param string $gender
     * @param string $text
     * @param int $workbookId
     * @param int $workbookFolderId
     * @param string $textRaw
     * @param string $fileName
     * @param string $resultUrl
     * @param string $resultExt
     * @param string $storage
     * @param string $title
     * @param string $vendor
     * @param string $vendorId
     * @param int $characters
     * @param string $voiceType
     * @param string $planType
     * @param string $audioType
     * @param string $mode
     * @param string $createdAt
     * @param string $updatedAt
     */
    public function __construct(
        int $id,
        int $userId,
        string $language,
        string $languageFlag,
        string $voice,
        string $voiceId,
        string $gender,
        string $text,
        int $workbookId,
        int $workbookFolderId,
        string $textRaw,
        string $fileName,
        string $resultUrl,
        string $resultExt,
        string $storage,
        string $title,
        string $vendor,
        string $vendorId,
        int $characters,
        string $voiceType,
        string $planType,
        string $audioType,
        string $mode,
        string $createdAt,
        string $updatedAt
    ) {
        $this->id = $id;
        $this->userId = $userId;
        $this->language = $language;
        $this->languageFlag = $languageFlag;
        $this->voice = $voice;
        $this->voiceId = $voiceId;
        $this->gender = $gender;
        $this->text = $text;
        $this->workbookId = $workbookId;
        $this->workbookFolderId = $workbookFolderId;
        $this->textRaw = $textRaw;
        $this->fileName = $fileName;
        $this->resultUrl = $resultUrl;
        $this->resultExt = $resultExt;
        $this->storage = $storage;
        $this->title = $title;
        $this->vendor = $vendor;
        $this->vendorId = $vendorId;
        $this->characters = $characters;
        $this->voiceType = $voiceType;
        $this->planType = $planType;
        $this->audioType = $audioType;
        $this->mode = $mode;
        $this->createdAt = $createdAt;
        $this->updatedAt = $updatedAt;
    }

    /**
     * Returns Id.
     */
    public function getId(): int
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @required
     * @maps id
     */
    public function setId(int $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns User Id.
     */
    public function getUserId(): int
    {
        return $this->userId;
    }

    /**
     * Sets User Id.
     *
     * @required
     * @maps user_id
     */
    public function setUserId(int $userId): void
    {
        $this->userId = $userId;
    }

    /**
     * Returns Language.
     */
    public function getLanguage(): string
    {
        return $this->language;
    }

    /**
     * Sets Language.
     *
     * @required
     * @maps language
     */
    public function setLanguage(string $language): void
    {
        $this->language = $language;
    }

    /**
     * Returns Language Flag.
     */
    public function getLanguageFlag(): string
    {
        return $this->languageFlag;
    }

    /**
     * Sets Language Flag.
     *
     * @required
     * @maps language_flag
     */
    public function setLanguageFlag(string $languageFlag): void
    {
        $this->languageFlag = $languageFlag;
    }

    /**
     * Returns Voice.
     */
    public function getVoice(): string
    {
        return $this->voice;
    }

    /**
     * Sets Voice.
     *
     * @required
     * @maps voice
     */
    public function setVoice(string $voice): void
    {
        $this->voice = $voice;
    }

    /**
     * Returns Voice Id.
     */
    public function getVoiceId(): string
    {
        return $this->voiceId;
    }

    /**
     * Sets Voice Id.
     *
     * @required
     * @maps voice_id
     */
    public function setVoiceId(string $voiceId): void
    {
        $this->voiceId = $voiceId;
    }

    /**
     * Returns Gender.
     */
    public function getGender(): string
    {
        return $this->gender;
    }

    /**
     * Sets Gender.
     *
     * @required
     * @maps gender
     */
    public function setGender(string $gender): void
    {
        $this->gender = $gender;
    }

    /**
     * Returns Text.
     */
    public function getText(): string
    {
        return $this->text;
    }

    /**
     * Sets Text.
     *
     * @required
     * @maps text
     */
    public function setText(string $text): void
    {
        $this->text = $text;
    }

    /**
     * Returns Workbook Id.
     */
    public function getWorkbookId(): int
    {
        return $this->workbookId;
    }

    /**
     * Sets Workbook Id.
     *
     * @required
     * @maps workbook_id
     */
    public function setWorkbookId(int $workbookId): void
    {
        $this->workbookId = $workbookId;
    }

    /**
     * Returns Workbook Folder Id.
     */
    public function getWorkbookFolderId(): int
    {
        return $this->workbookFolderId;
    }

    /**
     * Sets Workbook Folder Id.
     *
     * @required
     * @maps workbook_folder_id
     */
    public function setWorkbookFolderId(int $workbookFolderId): void
    {
        $this->workbookFolderId = $workbookFolderId;
    }

    /**
     * Returns Text Raw.
     */
    public function getTextRaw(): string
    {
        return $this->textRaw;
    }

    /**
     * Sets Text Raw.
     *
     * @required
     * @maps text_raw
     */
    public function setTextRaw(string $textRaw): void
    {
        $this->textRaw = $textRaw;
    }

    /**
     * Returns File Name.
     */
    public function getFileName(): string
    {
        return $this->fileName;
    }

    /**
     * Sets File Name.
     *
     * @required
     * @maps file_name
     */
    public function setFileName(string $fileName): void
    {
        $this->fileName = $fileName;
    }

    /**
     * Returns Result Url.
     */
    public function getResultUrl(): string
    {
        return $this->resultUrl;
    }

    /**
     * Sets Result Url.
     *
     * @required
     * @maps result_url
     */
    public function setResultUrl(string $resultUrl): void
    {
        $this->resultUrl = $resultUrl;
    }

    /**
     * Returns Result Ext.
     */
    public function getResultExt(): string
    {
        return $this->resultExt;
    }

    /**
     * Sets Result Ext.
     *
     * @required
     * @maps result_ext
     */
    public function setResultExt(string $resultExt): void
    {
        $this->resultExt = $resultExt;
    }

    /**
     * Returns Storage.
     */
    public function getStorage(): string
    {
        return $this->storage;
    }

    /**
     * Sets Storage.
     *
     * @required
     * @maps storage
     */
    public function setStorage(string $storage): void
    {
        $this->storage = $storage;
    }

    /**
     * Returns Title.
     */
    public function getTitle(): string
    {
        return $this->title;
    }

    /**
     * Sets Title.
     *
     * @required
     * @maps title
     */
    public function setTitle(string $title): void
    {
        $this->title = $title;
    }

    /**
     * Returns Vendor.
     */
    public function getVendor(): string
    {
        return $this->vendor;
    }

    /**
     * Sets Vendor.
     *
     * @required
     * @maps vendor
     */
    public function setVendor(string $vendor): void
    {
        $this->vendor = $vendor;
    }

    /**
     * Returns Vendor Id.
     */
    public function getVendorId(): string
    {
        return $this->vendorId;
    }

    /**
     * Sets Vendor Id.
     *
     * @required
     * @maps vendor_id
     */
    public function setVendorId(string $vendorId): void
    {
        $this->vendorId = $vendorId;
    }

    /**
     * Returns Characters.
     */
    public function getCharacters(): int
    {
        return $this->characters;
    }

    /**
     * Sets Characters.
     *
     * @required
     * @maps characters
     */
    public function setCharacters(int $characters): void
    {
        $this->characters = $characters;
    }

    /**
     * Returns Voice Type.
     */
    public function getVoiceType(): string
    {
        return $this->voiceType;
    }

    /**
     * Sets Voice Type.
     *
     * @required
     * @maps voice_type
     */
    public function setVoiceType(string $voiceType): void
    {
        $this->voiceType = $voiceType;
    }

    /**
     * Returns Plan Type.
     */
    public function getPlanType(): string
    {
        return $this->planType;
    }

    /**
     * Sets Plan Type.
     *
     * @required
     * @maps plan_type
     */
    public function setPlanType(string $planType): void
    {
        $this->planType = $planType;
    }

    /**
     * Returns Audio Type.
     */
    public function getAudioType(): string
    {
        return $this->audioType;
    }

    /**
     * Sets Audio Type.
     *
     * @required
     * @maps audio_type
     */
    public function setAudioType(string $audioType): void
    {
        $this->audioType = $audioType;
    }

    /**
     * Returns Mode.
     */
    public function getMode(): string
    {
        return $this->mode;
    }

    /**
     * Sets Mode.
     *
     * @required
     * @maps mode
     */
    public function setMode(string $mode): void
    {
        $this->mode = $mode;
    }

    /**
     * Returns Project.
     */
    public function getProject(): ?string
    {
        return $this->project;
    }

    /**
     * Sets Project.
     *
     * @maps project
     */
    public function setProject(?string $project): void
    {
        $this->project = $project;
    }

    /**
     * Returns Expires At.
     */
    public function getExpiresAt(): ?string
    {
        return $this->expiresAt;
    }

    /**
     * Sets Expires At.
     *
     * @maps expires_at
     */
    public function setExpiresAt(?string $expiresAt): void
    {
        $this->expiresAt = $expiresAt;
    }

    /**
     * Returns Created At.
     */
    public function getCreatedAt(): string
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     *
     * @required
     * @maps created_at
     */
    public function setCreatedAt(string $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Updated At.
     */
    public function getUpdatedAt(): string
    {
        return $this->updatedAt;
    }

    /**
     * Sets Updated At.
     *
     * @required
     * @maps updated_at
     */
    public function setUpdatedAt(string $updatedAt): void
    {
        $this->updatedAt = $updatedAt;
    }

    /**
     * Returns Deleted At.
     */
    public function getDeletedAt(): ?string
    {
        return $this->deletedAt;
    }

    /**
     * Sets Deleted At.
     *
     * @maps deleted_at
     */
    public function setDeletedAt(?string $deletedAt): void
    {
        $this->deletedAt = $deletedAt;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['id']                 = $this->id;
        $json['user_id']            = $this->userId;
        $json['language']           = $this->language;
        $json['language_flag']      = $this->languageFlag;
        $json['voice']              = $this->voice;
        $json['voice_id']           = $this->voiceId;
        $json['gender']             = $this->gender;
        $json['text']               = $this->text;
        $json['workbook_id']        = $this->workbookId;
        $json['workbook_folder_id'] = $this->workbookFolderId;
        $json['text_raw']           = $this->textRaw;
        $json['file_name']          = $this->fileName;
        $json['result_url']         = $this->resultUrl;
        $json['result_ext']         = $this->resultExt;
        $json['storage']            = $this->storage;
        $json['title']              = $this->title;
        $json['vendor']             = $this->vendor;
        $json['vendor_id']          = $this->vendorId;
        $json['characters']         = $this->characters;
        $json['voice_type']         = $this->voiceType;
        $json['plan_type']          = $this->planType;
        $json['audio_type']         = $this->audioType;
        $json['mode']               = $this->mode;
        $json['project']            = $this->project;
        $json['expires_at']         = $this->expiresAt;
        $json['created_at']         = $this->createdAt;
        $json['updated_at']         = $this->updatedAt;
        $json['deleted_at']         = $this->deletedAt;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
