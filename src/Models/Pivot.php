<?php

declare(strict_types=1);

/*
 * TaamAiUserLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace TaamAiUserLib\Models;

use stdClass;

class Pivot implements \JsonSerializable
{
    /**
     * @var int
     */
    private $modelId;

    /**
     * @var int
     */
    private $roleId;

    /**
     * @var string
     */
    private $modelType;

    /**
     * @param int $modelId
     * @param int $roleId
     * @param string $modelType
     */
    public function __construct(int $modelId, int $roleId, string $modelType)
    {
        $this->modelId = $modelId;
        $this->roleId = $roleId;
        $this->modelType = $modelType;
    }

    /**
     * Returns Model Id.
     */
    public function getModelId(): int
    {
        return $this->modelId;
    }

    /**
     * Sets Model Id.
     *
     * @required
     * @maps model_id
     */
    public function setModelId(int $modelId): void
    {
        $this->modelId = $modelId;
    }

    /**
     * Returns Role Id.
     */
    public function getRoleId(): int
    {
        return $this->roleId;
    }

    /**
     * Sets Role Id.
     *
     * @required
     * @maps role_id
     */
    public function setRoleId(int $roleId): void
    {
        $this->roleId = $roleId;
    }

    /**
     * Returns Model Type.
     */
    public function getModelType(): string
    {
        return $this->modelType;
    }

    /**
     * Sets Model Type.
     *
     * @required
     * @maps model_type
     */
    public function setModelType(string $modelType): void
    {
        $this->modelType = $modelType;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['model_id']   = $this->modelId;
        $json['role_id']    = $this->roleId;
        $json['model_type'] = $this->modelType;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
