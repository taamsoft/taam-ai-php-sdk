<?php

declare(strict_types=1);

/*
 * TaamAiUserLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace TaamAiUserLib\Models;

use stdClass;

class Data7 implements \JsonSerializable
{
    /**
     * @var int
     */
    private $id;

    /**
     * @var int
     */
    private $userId;

    /**
     * @var string
     */
    private $url;

    /**
     * @var string
     */
    private $transcript;

    /**
     * @var int
     */
    private $workbookId;

    /**
     * @var int
     */
    private $workbookFolderId;

    /**
     * @var string
     */
    private $title;

    /**
     * @var string
     */
    private $workbook;

    /**
     * @var string
     */
    private $task;

    /**
     * @var int
     */
    private $words;

    /**
     * @var string
     */
    private $format;

    /**
     * @var string
     */
    private $audioType;

    /**
     * @var string|null
     */
    private $description;

    /**
     * @var string
     */
    private $storage;

    /**
     * @var string
     */
    private $length;

    /**
     * @var string
     */
    private $planType;

    /**
     * @var string
     */
    private $size;

    /**
     * @var string
     */
    private $fileName;

    /**
     * @var string
     */
    private $tempName;

    /**
     * @var string
     */
    private $expiresAt;

    /**
     * @var string
     */
    private $createdAt;

    /**
     * @var string
     */
    private $updatedAt;

    /**
     * @var string|null
     */
    private $deletedAt;

    /**
     * @param int $id
     * @param int $userId
     * @param string $url
     * @param string $transcript
     * @param int $workbookId
     * @param int $workbookFolderId
     * @param string $title
     * @param string $workbook
     * @param string $task
     * @param int $words
     * @param string $format
     * @param string $audioType
     * @param string $storage
     * @param string $length
     * @param string $planType
     * @param string $size
     * @param string $fileName
     * @param string $tempName
     * @param string $expiresAt
     * @param string $createdAt
     * @param string $updatedAt
     */
    public function __construct(
        int $id,
        int $userId,
        string $url,
        string $transcript,
        int $workbookId,
        int $workbookFolderId,
        string $title,
        string $workbook,
        string $task,
        int $words,
        string $format,
        string $audioType,
        string $storage,
        string $length,
        string $planType,
        string $size,
        string $fileName,
        string $tempName,
        string $expiresAt,
        string $createdAt,
        string $updatedAt
    ) {
        $this->id = $id;
        $this->userId = $userId;
        $this->url = $url;
        $this->transcript = $transcript;
        $this->workbookId = $workbookId;
        $this->workbookFolderId = $workbookFolderId;
        $this->title = $title;
        $this->workbook = $workbook;
        $this->task = $task;
        $this->words = $words;
        $this->format = $format;
        $this->audioType = $audioType;
        $this->storage = $storage;
        $this->length = $length;
        $this->planType = $planType;
        $this->size = $size;
        $this->fileName = $fileName;
        $this->tempName = $tempName;
        $this->expiresAt = $expiresAt;
        $this->createdAt = $createdAt;
        $this->updatedAt = $updatedAt;
    }

    /**
     * Returns Id.
     */
    public function getId(): int
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @required
     * @maps id
     */
    public function setId(int $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns User Id.
     */
    public function getUserId(): int
    {
        return $this->userId;
    }

    /**
     * Sets User Id.
     *
     * @required
     * @maps user_id
     */
    public function setUserId(int $userId): void
    {
        $this->userId = $userId;
    }

    /**
     * Returns Url.
     */
    public function getUrl(): string
    {
        return $this->url;
    }

    /**
     * Sets Url.
     *
     * @required
     * @maps url
     */
    public function setUrl(string $url): void
    {
        $this->url = $url;
    }

    /**
     * Returns Transcript.
     */
    public function getTranscript(): string
    {
        return $this->transcript;
    }

    /**
     * Sets Transcript.
     *
     * @required
     * @maps transcript
     */
    public function setTranscript(string $transcript): void
    {
        $this->transcript = $transcript;
    }

    /**
     * Returns Workbook Id.
     */
    public function getWorkbookId(): int
    {
        return $this->workbookId;
    }

    /**
     * Sets Workbook Id.
     *
     * @required
     * @maps workbook_id
     */
    public function setWorkbookId(int $workbookId): void
    {
        $this->workbookId = $workbookId;
    }

    /**
     * Returns Workbook Folder Id.
     */
    public function getWorkbookFolderId(): int
    {
        return $this->workbookFolderId;
    }

    /**
     * Sets Workbook Folder Id.
     *
     * @required
     * @maps workbook_folder_id
     */
    public function setWorkbookFolderId(int $workbookFolderId): void
    {
        $this->workbookFolderId = $workbookFolderId;
    }

    /**
     * Returns Title.
     */
    public function getTitle(): string
    {
        return $this->title;
    }

    /**
     * Sets Title.
     *
     * @required
     * @maps title
     */
    public function setTitle(string $title): void
    {
        $this->title = $title;
    }

    /**
     * Returns Workbook.
     */
    public function getWorkbook(): string
    {
        return $this->workbook;
    }

    /**
     * Sets Workbook.
     *
     * @required
     * @maps workbook
     */
    public function setWorkbook(string $workbook): void
    {
        $this->workbook = $workbook;
    }

    /**
     * Returns Task.
     */
    public function getTask(): string
    {
        return $this->task;
    }

    /**
     * Sets Task.
     *
     * @required
     * @maps task
     */
    public function setTask(string $task): void
    {
        $this->task = $task;
    }

    /**
     * Returns Words.
     */
    public function getWords(): int
    {
        return $this->words;
    }

    /**
     * Sets Words.
     *
     * @required
     * @maps words
     */
    public function setWords(int $words): void
    {
        $this->words = $words;
    }

    /**
     * Returns Format.
     */
    public function getFormat(): string
    {
        return $this->format;
    }

    /**
     * Sets Format.
     *
     * @required
     * @maps format
     */
    public function setFormat(string $format): void
    {
        $this->format = $format;
    }

    /**
     * Returns Audio Type.
     */
    public function getAudioType(): string
    {
        return $this->audioType;
    }

    /**
     * Sets Audio Type.
     *
     * @required
     * @maps audio_type
     */
    public function setAudioType(string $audioType): void
    {
        $this->audioType = $audioType;
    }

    /**
     * Returns Description.
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     *
     * @maps description
     */
    public function setDescription(?string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Storage.
     */
    public function getStorage(): string
    {
        return $this->storage;
    }

    /**
     * Sets Storage.
     *
     * @required
     * @maps storage
     */
    public function setStorage(string $storage): void
    {
        $this->storage = $storage;
    }

    /**
     * Returns Length.
     */
    public function getLength(): string
    {
        return $this->length;
    }

    /**
     * Sets Length.
     *
     * @required
     * @maps length
     */
    public function setLength(string $length): void
    {
        $this->length = $length;
    }

    /**
     * Returns Plan Type.
     */
    public function getPlanType(): string
    {
        return $this->planType;
    }

    /**
     * Sets Plan Type.
     *
     * @required
     * @maps plan_type
     */
    public function setPlanType(string $planType): void
    {
        $this->planType = $planType;
    }

    /**
     * Returns Size.
     */
    public function getSize(): string
    {
        return $this->size;
    }

    /**
     * Sets Size.
     *
     * @required
     * @maps size
     */
    public function setSize(string $size): void
    {
        $this->size = $size;
    }

    /**
     * Returns File Name.
     */
    public function getFileName(): string
    {
        return $this->fileName;
    }

    /**
     * Sets File Name.
     *
     * @required
     * @maps file_name
     */
    public function setFileName(string $fileName): void
    {
        $this->fileName = $fileName;
    }

    /**
     * Returns Temp Name.
     */
    public function getTempName(): string
    {
        return $this->tempName;
    }

    /**
     * Sets Temp Name.
     *
     * @required
     * @maps temp_name
     */
    public function setTempName(string $tempName): void
    {
        $this->tempName = $tempName;
    }

    /**
     * Returns Expires At.
     */
    public function getExpiresAt(): string
    {
        return $this->expiresAt;
    }

    /**
     * Sets Expires At.
     *
     * @required
     * @maps expires_at
     */
    public function setExpiresAt(string $expiresAt): void
    {
        $this->expiresAt = $expiresAt;
    }

    /**
     * Returns Created At.
     */
    public function getCreatedAt(): string
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     *
     * @required
     * @maps created_at
     */
    public function setCreatedAt(string $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Updated At.
     */
    public function getUpdatedAt(): string
    {
        return $this->updatedAt;
    }

    /**
     * Sets Updated At.
     *
     * @required
     * @maps updated_at
     */
    public function setUpdatedAt(string $updatedAt): void
    {
        $this->updatedAt = $updatedAt;
    }

    /**
     * Returns Deleted At.
     */
    public function getDeletedAt(): ?string
    {
        return $this->deletedAt;
    }

    /**
     * Sets Deleted At.
     *
     * @maps deleted_at
     */
    public function setDeletedAt(?string $deletedAt): void
    {
        $this->deletedAt = $deletedAt;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['id']                 = $this->id;
        $json['user_id']            = $this->userId;
        $json['url']                = $this->url;
        $json['transcript']         = $this->transcript;
        $json['workbook_id']        = $this->workbookId;
        $json['workbook_folder_id'] = $this->workbookFolderId;
        $json['title']              = $this->title;
        $json['workbook']           = $this->workbook;
        $json['task']               = $this->task;
        $json['words']              = $this->words;
        $json['format']             = $this->format;
        $json['audio_type']         = $this->audioType;
        $json['description']        = $this->description;
        $json['storage']            = $this->storage;
        $json['length']             = $this->length;
        $json['plan_type']          = $this->planType;
        $json['size']               = $this->size;
        $json['file_name']          = $this->fileName;
        $json['temp_name']          = $this->tempName;
        $json['expires_at']         = $this->expiresAt;
        $json['created_at']         = $this->createdAt;
        $json['updated_at']         = $this->updatedAt;
        $json['deleted_at']         = $this->deletedAt;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
